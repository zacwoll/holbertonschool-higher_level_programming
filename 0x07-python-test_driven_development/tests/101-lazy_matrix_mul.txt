The ``101-matrix_mul`` module
============================

Using ``matrix_mul``
---------------------

This is a text file in reStructured Text format. First import ``matrix_mul`` from the ``101-matrix_mul`` module:

     >>> matrix_mul = __import__('101-lazy_matrix_mul').matrix_mul

Now use it:

    >>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]])
    [[7, 10], [15, 22]]

    >>> matrix_mul([[1, 2]], [[3, 4], [5, 6]])
    [[13, 16]]

    Test if m_a and m_b are lists
    >>> matrix_mul(5, [[1, 2], [3, 4]])
    Traceback (most recent call last):
        ...
    TypeError: m_a must be a list

    >>> matrix_mul([[1, 2], [3, 4]], "hello")
    Traceback (most recent call last):
        ...
    TypeError: m_b must be a list

    Test if m_a and m_b are lists of lists
    >>> matrix_mul([1, 2], [[1, 2], [3, 4]])
    Traceback (most recent call last):
        ...
    TypeError: m_a must be a list of lists

    >>> matrix_mul([[1, 2], [3, 4]], [3, 4])
    Traceback (most recent call last):
        ...
    TypeError: m_b must be a list of lists

    Test empty matrices
    >>> matrix_mul([], [[1, 2], [3, 4]])
    Traceback (most recent call last):
        ...
    ValueError: m_a can't be empty

    >>> matrix_mul([[1, 2], [3, 4]], [[], []])
    Traceback (most recent call last):
        ...
    ValueError: m_b can't be empty

    Test other data types
    >>> matrix_mul([[1, 2], ["string", 4]], [[1, 2], [3, 4]])
    Traceback (most recent call last):
        ...
    TypeError: m_a should contain only integers or floats

    >>> matrix_mul([[1, 2], [3, 4]], [[1, "string"], [3, 4]])
    Traceback (most recent call last):
        ...
    TypeError: m_b should contain only integers or floats

    Test unequal rows
    >>> matrix_mul([[1, 2, 3], [4, 5]], [[1, 2], [3, 4]])
    Traceback (most recent call last):
        ...
    TypeError: each row of m_a must be of the same size

    >>> matrix_mul([[1, 2], [3, 4]], [[1, 2, 3], [4, 5]])
    Traceback (most recent call last):
        ...
    TypeError: each row of m_b must be of the same size

    Test matrices that can't be multiplied
    >>> matrix_mul([[1, 2], [3, 4]], [[1, 2, 3], [4, 5, 6], [7, 8, 9]])
    Traceback (most recent call last):
        ...
    ValueError: m_a and m_b can't be multiplied

    Test with no arguments
    >>> matrix_mul()
    Traceback (most recent call last):
        ...
    TypeError: matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'

    >>> matrix_mul([[0]])
    Traceback (most recent call last):
        ...
    TypeError: matrix_mul() missing 1 required positional argument: 'm_b'

    Test infinity
    >>> matrix_mul([[float('inf')]], [[float('inf')]])
    [[inf]]

    Test nan
    >>> matrix_mul([[float('nan')]], [[float('nan')]])
    [[nan]]
